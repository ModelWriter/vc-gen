(assume x > 0; assume y > 0;)
(assume d!0 = d; havoc d; assume d = 1;)
(assume i!0 = i; havoc i; assume i = 1;)
(assert 1 <= i; assert i <= x + 1; assert i <= y + 1; assert x % d = 0; assert y % d = 0; assert forall j, x % j = 0 && y % j = 0 && j < i ==> j <= d;)
(havoc d; havoc i;)
(assume 1 <= i; assume i <= x + 1; assume i <= y + 1; assume x % d = 0; assume y % d = 0; assume forall j, x % j = 0 && y % j = 0 && j < i ==> j <= d;)
(assume i <= x && i <= y;
(assume x % i = 0 && y % i = 0;(assume d!1 = d; havoc d; assume d = i;))
(assume i!1 = i; havoc i; assume i = i!1 + 1;)
assert 1 <= i; assert i <= x + 1; assert i <= y + 1; assert x % d = 0; assert y % d = 0; assert forall j, x % j = 0 && y % j = 0 && j < i ==> j <= d; assume false;
[]
assume !(i <= x && i <= y);)
(assert x % d = 0; assert y % d = 0; assert forall n, x % n = 0 && y % n = 0 ==> n <= d;)