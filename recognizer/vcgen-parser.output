State 23 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 5 shift/reduce
State 66 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 68 conflicts: 3 shift/reduce
State 75 conflicts: 3 shift/reduce
State 76 conflicts: 3 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog "end of file"

    1 aexp: "identifier"
    2     | "number"
    3     | "identifier" "[" aexp "]"
    4     | "-" aexp
    5     | aexp "+" aexp
    6     | aexp "-" aexp
    7     | aexp "*" aexp
    8     | aexp "/" aexp
    9     | aexp "%" aexp
   10     | "(" aexp ")"

   11 bexp: comp
   12     | "!" bexp
   13     | bexp "||" bexp
   14     | bexp "&&" bexp
   15     | "(" bexp ")"

   16 comp: aexp "=" aexp
   17     | aexp "!=" aexp
   18     | aexp "<=" aexp
   19     | aexp ">=" aexp
   20     | aexp "<" aexp
   21     | aexp ">" aexp

   22 stmt: "identifier" ":=" aexp ";"
   23     | "identifier" "," "identifier" ":=" aexp "," aexp ";"
   24     | "identifier" "[" aexp "]" ":=" aexp ";"
   25     | "if" bexp "then" block "else" block "end"
   26     | "if" bexp "then" block "end"
   27     | "while" bexp inv_list "do" block "end"

   28 inv: "inv" assertion

   29 inv_list: inv
   30         | inv_list inv

   31 block: stmt_list

   32 stmt_list: stmt
   33          | stmt_list stmt

   34 prog: "program" "identifier" pre_list post_list "is" block "end"

   35 pre: "pre" assertion

   36 pre_list: pre
   37         | pre_list pre

   38 post: "post" assertion

   39 post_list: post
   40          | post_list post

   41 assertion: comp
   42          | "!" assertion
   43          | assertion "||" assertion
   44          | assertion "&&" assertion
   45          | assertion "==>" assertion
   46          | "forall" identifier_list "," assertion
   47          | "exists" identifier_list "," assertion
   48          | "(" assertion ")"

   49 identifier_list: "identifier"
   50                | identifier_list "identifier"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "+" (258) 5
    "-" (259) 4 6
    "*" (260) 7
    "/" (261) 8
    "%" (262) 9
    "(" (263) 10 15 48
    ")" (264) 10 15 48
    "=" (265) 16
    "!=" (266) 17
    "<=" (267) 18
    ">=" (268) 19
    "<" (269) 20
    ">" (270) 21
    "!" (271) 12 42
    "||" (272) 13 43
    "&&" (273) 14 44
    ":=" (274) 22 23 24
    ";" (275) 22 23 24
    "," (276) 23 46 47
    "if" (277) 25 26
    "then" (278) 25 26
    "else" (279) 25
    "end" (280) 25 26 27 34
    "while" (281) 27
    "do" (282) 27
    "inv" (283) 28
    "[" (284) 3 24
    "]" (285) 3 24
    "program" (286) 34
    "pre" (287) 35
    "post" (288) 38
    "is" (289) 34
    "==>" (290) 45
    "forall" (291) 46
    "exists" (292) 47
    "identifier" <std::string> (293) 1 3 22 23 24 34 49 50
    "number" <int> (294) 2


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    aexp <ast::ArithmeticExpression> (41)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 3 4 5 6 7 8 9 10 16 17 18 19 20 21 22 23 24
    bexp <ast::BooleanExpression> (42)
        on left: 11 12 13 14 15
        on right: 12 13 14 15 25 26 27
    comp <ast::Comparison> (43)
        on left: 16 17 18 19 20 21
        on right: 11 41
    stmt <ast::Statement> (44)
        on left: 22 23 24 25 26 27
        on right: 32 33
    inv <ast::Invariant> (45)
        on left: 28
        on right: 29 30
    inv_list <std::vector<ast::Invariant>> (46)
        on left: 29 30
        on right: 27 30
    block <ast::Block> (47)
        on left: 31
        on right: 25 26 27 34
    stmt_list <std::vector<ast::Statement>> (48)
        on left: 32 33
        on right: 31 33
    prog <ast::Program> (49)
        on left: 34
        on right: 0
    pre <ast::PreCondition> (50)
        on left: 35
        on right: 36 37
    pre_list <std::vector<ast::PreCondition>> (51)
        on left: 36 37
        on right: 34 37
    post <ast::PostCondition> (52)
        on left: 38
        on right: 39 40
    post_list <std::vector<ast::PostCondition>> (53)
        on left: 39 40
        on right: 34 40
    assertion <ast::Assertion> (54)
        on left: 41 42 43 44 45 46 47 48
        on right: 28 35 38 42 43 44 45 46 47 48
    identifier_list <std::vector<std::string>> (55)
        on left: 49 50
        on right: 46 47 50


State 0

    0 $accept: . prog "end of file"

    "program"  shift, and go to state 1

    prog  go to state 2


State 1

   34 prog: "program" . "identifier" pre_list post_list "is" block "end"

    "identifier"  shift, and go to state 3


State 2

    0 $accept: prog . "end of file"

    "end of file"  shift, and go to state 4


State 3

   34 prog: "program" "identifier" . pre_list post_list "is" block "end"

    "pre"  shift, and go to state 5

    pre       go to state 6
    pre_list  go to state 7


State 4

    0 $accept: prog "end of file" .

    $default  accept


State 5

   35 pre: "pre" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 17


State 6

   36 pre_list: pre .

    $default  reduce using rule 36 (pre_list)


State 7

   34 prog: "program" "identifier" pre_list . post_list "is" block "end"
   37 pre_list: pre_list . pre

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 18

    pre        go to state 19
    post       go to state 20
    post_list  go to state 21


State 8

    4 aexp: "-" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 23


State 9

   10 aexp: "(" . aexp ")"
   48 assertion: "(" . assertion ")"

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 24
    comp       go to state 16
    assertion  go to state 25


State 10

   42 assertion: "!" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 26


State 11

   46 assertion: "forall" . identifier_list "," assertion

    "identifier"  shift, and go to state 27

    identifier_list  go to state 28


State 12

   47 assertion: "exists" . identifier_list "," assertion

    "identifier"  shift, and go to state 27

    identifier_list  go to state 29


State 13

    1 aexp: "identifier" .
    3     | "identifier" . "[" aexp "]"

    "["  shift, and go to state 30

    $default  reduce using rule 1 (aexp)


State 14

    2 aexp: "number" .

    $default  reduce using rule 2 (aexp)


State 15

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   16 comp: aexp . "=" aexp
   17     | aexp . "!=" aexp
   18     | aexp . "<=" aexp
   19     | aexp . ">=" aexp
   20     | aexp . "<" aexp
   21     | aexp . ">" aexp

    "+"   shift, and go to state 31
    "-"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "%"   shift, and go to state 35
    "="   shift, and go to state 36
    "!="  shift, and go to state 37
    "<="  shift, and go to state 38
    ">="  shift, and go to state 39
    "<"   shift, and go to state 40
    ">"   shift, and go to state 41


State 16

   41 assertion: comp .

    $default  reduce using rule 41 (assertion)


State 17

   35 pre: "pre" assertion .
   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    $default  reduce using rule 35 (pre)


State 18

   38 post: "post" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 45


State 19

   37 pre_list: pre_list pre .

    $default  reduce using rule 37 (pre_list)


State 20

   39 post_list: post .

    $default  reduce using rule 39 (post_list)


State 21

   34 prog: "program" "identifier" pre_list post_list . "is" block "end"
   40 post_list: post_list . post

    "post"  shift, and go to state 18
    "is"    shift, and go to state 46

    post  go to state 47


State 22

   10 aexp: "(" . aexp ")"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 48


State 23

    4 aexp: "-" aexp .
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    "%"       [reduce using rule 4 (aexp)]
    $default  reduce using rule 4 (aexp)


State 24

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"
   16 comp: aexp . "=" aexp
   17     | aexp . "!=" aexp
   18     | aexp . "<=" aexp
   19     | aexp . ">=" aexp
   20     | aexp . "<" aexp
   21     | aexp . ">" aexp

    "+"   shift, and go to state 31
    "-"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "%"   shift, and go to state 35
    ")"   shift, and go to state 49
    "="   shift, and go to state 36
    "!="  shift, and go to state 37
    "<="  shift, and go to state 38
    ">="  shift, and go to state 39
    "<"   shift, and go to state 40
    ">"   shift, and go to state 41


State 25

   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion
   48          | "(" assertion . ")"

    ")"    shift, and go to state 50
    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44


State 26

   42 assertion: "!" assertion .
   43          | assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    "==>"     [reduce using rule 42 (assertion)]
    $default  reduce using rule 42 (assertion)


State 27

   49 identifier_list: "identifier" .

    $default  reduce using rule 49 (identifier_list)


State 28

   46 assertion: "forall" identifier_list . "," assertion
   50 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 51
    "identifier"  shift, and go to state 52


State 29

   47 assertion: "exists" identifier_list . "," assertion
   50 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 53
    "identifier"  shift, and go to state 52


State 30

    3 aexp: "identifier" "[" . aexp "]"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 54


State 31

    5 aexp: aexp "+" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 55


State 32

    6 aexp: aexp "-" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 56


State 33

    7 aexp: aexp "*" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 57


State 34

    8 aexp: aexp "/" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 58


State 35

    9 aexp: aexp "%" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 59


State 36

   16 comp: aexp "=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 60


State 37

   17 comp: aexp "!=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 61


State 38

   18 comp: aexp "<=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 62


State 39

   19 comp: aexp ">=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 63


State 40

   20 comp: aexp "<" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 64


State 41

   21 comp: aexp ">" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 65


State 42

   43 assertion: assertion "||" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 66


State 43

   44 assertion: assertion "&&" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 67


State 44

   45 assertion: assertion "==>" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 68


State 45

   38 post: "post" assertion .
   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    $default  reduce using rule 38 (post)


State 46

   34 prog: "program" "identifier" pre_list post_list "is" . block "end"

    "if"          shift, and go to state 69
    "while"       shift, and go to state 70
    "identifier"  shift, and go to state 71

    stmt       go to state 72
    block      go to state 73
    stmt_list  go to state 74


State 47

   40 post_list: post_list post .

    $default  reduce using rule 40 (post_list)


State 48

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    ")"  shift, and go to state 49


State 49

   10 aexp: "(" aexp ")" .

    $default  reduce using rule 10 (aexp)


State 50

   48 assertion: "(" assertion ")" .

    $default  reduce using rule 48 (assertion)


State 51

   46 assertion: "forall" identifier_list "," . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 75


State 52

   50 identifier_list: identifier_list "identifier" .

    $default  reduce using rule 50 (identifier_list)


State 53

   47 assertion: "exists" identifier_list "," . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 76


State 54

    3 aexp: "identifier" "[" aexp . "]"
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    "]"  shift, and go to state 77


State 55

    5 aexp: aexp . "+" aexp
    5     | aexp "+" aexp .
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    "%"       [reduce using rule 5 (aexp)]
    $default  reduce using rule 5 (aexp)


State 56

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    6     | aexp "-" aexp .
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    "%"       [reduce using rule 6 (aexp)]
    $default  reduce using rule 6 (aexp)


State 57

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    7     | aexp "*" aexp .
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "%"  shift, and go to state 35

    "%"       [reduce using rule 7 (aexp)]
    $default  reduce using rule 7 (aexp)


State 58

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    8     | aexp "/" aexp .
    9     | aexp . "%" aexp

    "%"  shift, and go to state 35

    "%"       [reduce using rule 8 (aexp)]
    $default  reduce using rule 8 (aexp)


State 59

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
    9     | aexp "%" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    "+"       [reduce using rule 9 (aexp)]
    "-"       [reduce using rule 9 (aexp)]
    "*"       [reduce using rule 9 (aexp)]
    "/"       [reduce using rule 9 (aexp)]
    "%"       [reduce using rule 9 (aexp)]
    $default  reduce using rule 9 (aexp)


State 60

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   16 comp: aexp "=" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 16 (comp)


State 61

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   17 comp: aexp "!=" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 17 (comp)


State 62

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp "<=" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 18 (comp)


State 63

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   19 comp: aexp ">=" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 19 (comp)


State 64

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   20 comp: aexp "<" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 20 (comp)


State 65

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   21 comp: aexp ">" aexp .

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35

    $default  reduce using rule 21 (comp)


State 66

   43 assertion: assertion . "||" assertion
   43          | assertion "||" assertion .
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "==>"  shift, and go to state 44

    "||"      [reduce using rule 43 (assertion)]
    "==>"     [reduce using rule 43 (assertion)]
    $default  reduce using rule 43 (assertion)


State 67

   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   44          | assertion "&&" assertion .
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    "&&"      [reduce using rule 44 (assertion)]
    "==>"     [reduce using rule 44 (assertion)]
    $default  reduce using rule 44 (assertion)


State 68

   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion
   45          | assertion "==>" assertion .

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    "||"      [reduce using rule 45 (assertion)]
    "&&"      [reduce using rule 45 (assertion)]
    "==>"     [reduce using rule 45 (assertion)]
    $default  reduce using rule 45 (assertion)


State 69

   25 stmt: "if" . bexp "then" block "else" block "end"
   26     | "if" . bexp "then" block "end"

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 15
    bexp  go to state 80
    comp  go to state 81


State 70

   27 stmt: "while" . bexp inv_list "do" block "end"

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 15
    bexp  go to state 82
    comp  go to state 81


State 71

   22 stmt: "identifier" . ":=" aexp ";"
   23     | "identifier" . "," "identifier" ":=" aexp "," aexp ";"
   24     | "identifier" . "[" aexp "]" ":=" aexp ";"

    ":="  shift, and go to state 83
    ","   shift, and go to state 84
    "["   shift, and go to state 85


State 72

   32 stmt_list: stmt .

    $default  reduce using rule 32 (stmt_list)


State 73

   34 prog: "program" "identifier" pre_list post_list "is" block . "end"

    "end"  shift, and go to state 86


State 74

   31 block: stmt_list .
   33 stmt_list: stmt_list . stmt

    "if"          shift, and go to state 69
    "while"       shift, and go to state 70
    "identifier"  shift, and go to state 71

    $default  reduce using rule 31 (block)

    stmt  go to state 87


State 75

   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion
   46          | "forall" identifier_list "," assertion .

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    "||"      [reduce using rule 46 (assertion)]
    "&&"      [reduce using rule 46 (assertion)]
    "==>"     [reduce using rule 46 (assertion)]
    $default  reduce using rule 46 (assertion)


State 76

   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion
   47          | "exists" identifier_list "," assertion .

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    "||"      [reduce using rule 47 (assertion)]
    "&&"      [reduce using rule 47 (assertion)]
    "==>"     [reduce using rule 47 (assertion)]
    $default  reduce using rule 47 (assertion)


State 77

    3 aexp: "identifier" "[" aexp "]" .

    $default  reduce using rule 3 (aexp)


State 78

   10 aexp: "(" . aexp ")"
   15 bexp: "(" . bexp ")"

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 24
    bexp  go to state 88
    comp  go to state 81


State 79

   12 bexp: "!" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 15
    bexp  go to state 89
    comp  go to state 81


State 80

   13 bexp: bexp . "||" bexp
   14     | bexp . "&&" bexp
   25 stmt: "if" bexp . "then" block "else" block "end"
   26     | "if" bexp . "then" block "end"

    "||"    shift, and go to state 90
    "&&"    shift, and go to state 91
    "then"  shift, and go to state 92


State 81

   11 bexp: comp .

    $default  reduce using rule 11 (bexp)


State 82

   13 bexp: bexp . "||" bexp
   14     | bexp . "&&" bexp
   27 stmt: "while" bexp . inv_list "do" block "end"

    "||"   shift, and go to state 90
    "&&"   shift, and go to state 91
    "inv"  shift, and go to state 93

    inv       go to state 94
    inv_list  go to state 95


State 83

   22 stmt: "identifier" ":=" . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 96


State 84

   23 stmt: "identifier" "," . "identifier" ":=" aexp "," aexp ";"

    "identifier"  shift, and go to state 97


State 85

   24 stmt: "identifier" "[" . aexp "]" ":=" aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 98


State 86

   34 prog: "program" "identifier" pre_list post_list "is" block "end" .

    $default  reduce using rule 34 (prog)


State 87

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 88

   13 bexp: bexp . "||" bexp
   14     | bexp . "&&" bexp
   15     | "(" bexp . ")"

    ")"   shift, and go to state 99
    "||"  shift, and go to state 90
    "&&"  shift, and go to state 91


State 89

   12 bexp: "!" bexp .
   13     | bexp . "||" bexp
   14     | bexp . "&&" bexp

    "||"  shift, and go to state 90
    "&&"  shift, and go to state 91

    $default  reduce using rule 12 (bexp)


State 90

   13 bexp: bexp "||" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 15
    bexp  go to state 100
    comp  go to state 81


State 91

   14 bexp: bexp "&&" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 78
    "!"           shift, and go to state 79
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 15
    bexp  go to state 101
    comp  go to state 81


State 92

   25 stmt: "if" bexp "then" . block "else" block "end"
   26     | "if" bexp "then" . block "end"

    "if"          shift, and go to state 69
    "while"       shift, and go to state 70
    "identifier"  shift, and go to state 71

    stmt       go to state 72
    block      go to state 102
    stmt_list  go to state 74


State 93

   28 inv: "inv" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    comp       go to state 16
    assertion  go to state 103


State 94

   29 inv_list: inv .

    $default  reduce using rule 29 (inv_list)


State 95

   27 stmt: "while" bexp inv_list . "do" block "end"
   30 inv_list: inv_list . inv

    "do"   shift, and go to state 104
    "inv"  shift, and go to state 93

    inv  go to state 105


State 96

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   22 stmt: "identifier" ":=" aexp . ";"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    ";"  shift, and go to state 106


State 97

   23 stmt: "identifier" "," "identifier" . ":=" aexp "," aexp ";"

    ":="  shift, and go to state 107


State 98

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   24 stmt: "identifier" "[" aexp . "]" ":=" aexp ";"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    "]"  shift, and go to state 108


State 99

   15 bexp: "(" bexp ")" .

    $default  reduce using rule 15 (bexp)


State 100

   13 bexp: bexp . "||" bexp
   13     | bexp "||" bexp .
   14     | bexp . "&&" bexp

    "||"  shift, and go to state 90

    "||"      [reduce using rule 13 (bexp)]
    $default  reduce using rule 13 (bexp)


State 101

   13 bexp: bexp . "||" bexp
   14     | bexp . "&&" bexp
   14     | bexp "&&" bexp .

    "||"  shift, and go to state 90
    "&&"  shift, and go to state 91

    "&&"      [reduce using rule 14 (bexp)]
    $default  reduce using rule 14 (bexp)


State 102

   25 stmt: "if" bexp "then" block . "else" block "end"
   26     | "if" bexp "then" block . "end"

    "else"  shift, and go to state 109
    "end"   shift, and go to state 110


State 103

   28 inv: "inv" assertion .
   43 assertion: assertion . "||" assertion
   44          | assertion . "&&" assertion
   45          | assertion . "==>" assertion

    "||"   shift, and go to state 42
    "&&"   shift, and go to state 43
    "==>"  shift, and go to state 44

    $default  reduce using rule 28 (inv)


State 104

   27 stmt: "while" bexp inv_list "do" . block "end"

    "if"          shift, and go to state 69
    "while"       shift, and go to state 70
    "identifier"  shift, and go to state 71

    stmt       go to state 72
    block      go to state 111
    stmt_list  go to state 74


State 105

   30 inv_list: inv_list inv .

    $default  reduce using rule 30 (inv_list)


State 106

   22 stmt: "identifier" ":=" aexp ";" .

    $default  reduce using rule 22 (stmt)


State 107

   23 stmt: "identifier" "," "identifier" ":=" . aexp "," aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 112


State 108

   24 stmt: "identifier" "[" aexp "]" . ":=" aexp ";"

    ":="  shift, and go to state 113


State 109

   25 stmt: "if" bexp "then" block "else" . block "end"

    "if"          shift, and go to state 69
    "while"       shift, and go to state 70
    "identifier"  shift, and go to state 71

    stmt       go to state 72
    block      go to state 114
    stmt_list  go to state 74


State 110

   26 stmt: "if" bexp "then" block "end" .

    $default  reduce using rule 26 (stmt)


State 111

   27 stmt: "while" bexp inv_list "do" block . "end"

    "end"  shift, and go to state 115


State 112

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   23 stmt: "identifier" "," "identifier" ":=" aexp . "," aexp ";"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    ","  shift, and go to state 116


State 113

   24 stmt: "identifier" "[" aexp "]" ":=" . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 117


State 114

   25 stmt: "if" bexp "then" block "else" block . "end"

    "end"  shift, and go to state 118


State 115

   27 stmt: "while" bexp inv_list "do" block "end" .

    $default  reduce using rule 27 (stmt)


State 116

   23 stmt: "identifier" "," "identifier" ":=" aexp "," . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 22
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp  go to state 119


State 117

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   24 stmt: "identifier" "[" aexp "]" ":=" aexp . ";"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    ";"  shift, and go to state 120


State 118

   25 stmt: "if" bexp "then" block "else" block "end" .

    $default  reduce using rule 25 (stmt)


State 119

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   23 stmt: "identifier" "," "identifier" ":=" aexp "," aexp . ";"

    "+"  shift, and go to state 31
    "-"  shift, and go to state 32
    "*"  shift, and go to state 33
    "/"  shift, and go to state 34
    "%"  shift, and go to state 35
    ";"  shift, and go to state 121


State 120

   24 stmt: "identifier" "[" aexp "]" ":=" aexp ";" .

    $default  reduce using rule 24 (stmt)


State 121

   23 stmt: "identifier" "," "identifier" ":=" aexp "," aexp ";" .

    $default  reduce using rule 23 (stmt)
