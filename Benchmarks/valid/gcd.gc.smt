(declare-const x Int)
(declare-const n Int)
(declare-const y Int)
(declare-const d Int)
(declare-const j Int)
(declare-const i Int)
(declare-const i!1 Int)
(declare-const i?0 Int)
(declare-const d?1 Int)
(declare-const d!1 Int)
(declare-const i?2 Int)
(declare-const d?3 Int)
(declare-const i?4 Int)
(declare-const i!0 Int)
(declare-const d?5 Int)
(declare-const d!0 Int)

(assert (not (=> (> x 0) (=> (> y 0) (=> (= d!0 d) (=> (= d?5 1) (=> (= i!0 i) (=> (= i?4 1) (and (<= 1 i?4) (and (<= i?4 (+ x 1)) (and (<= i?4 (+ y 1)) (and (= (mod x d?5) 0) (and (= (mod y d?5) 0) (and (forall ((j Int)) (=> (and (= (mod x j) 0) (and (= (mod y j) 0) (< j i?4))) (<= j d?5))) (=> (<= 1 i?2) (=> (<= i?2 (+ x 1)) (=> (<= i?2 (+ y 1)) (=> (= (mod x d?3) 0) (=> (= (mod y d?3) 0) (=> (forall ((j Int)) (=> (and (= (mod x j) 0) (and (= (mod y j) 0) (< j i?2))) (<= j d?3))) (and (=> (and (<= i?2 x) (<= i?2 y)) (=> (and (= (mod x i?2) 0) (= (mod y i?2) 0)) (=> (= d!1 d?3) (=> (= d?1 i?2) (=> (= i!1 i?2) (=> (= i?0 (+ i!1 1)) (and (<= 1 i?0) (and (<= i?0 (+ x 1)) (and (<= i?0 (+ y 1)) (and (= (mod x d?1) 0) (and (= (mod y d?1) 0) (and (forall ((j Int)) (=> (and (= (mod x j) 0) (and (= (mod y j) 0) (< j i?0))) (<= j d?1))) (=> false (and (= (mod x d?1) 0) (and (= (mod y d?1) 0) (and (forall ((n Int)) (=> (and (= (mod x n) 0) (= (mod y n) 0)) (<= n d?1))) true)))))))))))))))) (=> (not (and (<= i?2 x) (<= i?2 y))) (and (= (mod x d?3) 0) (and (= (mod y d?3) 0) (and (forall ((n Int)) (=> (and (= (mod x n) 0) (= (mod y n) 0)) (<= n d?3))) true)))))))))))))))))))))))))
(check-sat)
(exit)
