State 38 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 5 shift/reduce
State 93 conflicts: 2 shift/reduce
State 94 conflicts: 2 shift/reduce
State 95 conflicts: 3 shift/reduce
State 111 conflicts: 3 shift/reduce
State 112 conflicts: 3 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog "end of file"

    1 aexp: reference
    2     | reference "[" aexp "]"
    3     | constant
    4     | "-" aexp
    5     | aexp "+" aexp
    6     | aexp "-" aexp
    7     | aexp "*" aexp
    8     | aexp "/" aexp
    9     | aexp "%" aexp
   10     | "(" aexp ")"

   11 reference: "identifier"

   12 constant: "number"

   13 bexp: comp
   14     | "!" bexp
   15     | bexp "||" bexp
   16     | bexp "&&" bexp
   17     | "(" bexp ")"

   18 comp: aexp "=" aexp
   19     | aexp "!=" aexp
   20     | aexp "<=" aexp
   21     | aexp ">=" aexp
   22     | aexp "<" aexp
   23     | aexp ">" aexp

   24 stmt: location ":=" aexp ";"
   25     | location "," location ":=" aexp "," aexp ";"
   26     | location "[" aexp "]" ":=" aexp ";"
   27     | "if" bexp "then" block "else" block "end"
   28     | "if" bexp "then" block "end"
   29     | "while" bexp inv_list "do" block "end"
   30     | "while" bexp "do" block "end"

   31 location: "identifier"

   32 inv_list: inv
   33         | inv_list inv

   34 inv: "inv" assertion

   35 block: stmt_list

   36 stmt_list: stmt
   37          | stmt_list stmt

   38 prog: "program" "identifier" pre_list post_list "is" block "end"
   39     | "program" "identifier" post_list "is" block "end"
   40     | "program" "identifier" pre_list "is" block "end"
   41     | "program" "identifier" "is" block "end"

   42 pre_list: pre
   43         | pre_list pre

   44 pre: "pre" assertion

   45 post_list: post
   46          | post_list post

   47 post: "post" assertion

   48 assertion: comp
   49          | "!" assertion
   50          | assertion "||" assertion
   51          | assertion "&&" assertion
   52          | assertion "==>" assertion
   53          | "forall" identifier_list "," assertion
   54          | "exists" identifier_list "," assertion
   55          | "(" assertion ")"
   56          | "(" error ")"

   57 identifier_list: "identifier"
   58                | identifier_list "identifier"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 56
    "+" (258) 5
    "-" (259) 4 6
    "*" (260) 7
    "/" (261) 8
    "%" (262) 9
    "(" (263) 10 17 55 56
    ")" (264) 10 17 55 56
    "=" (265) 18
    "!=" (266) 19
    "<=" (267) 20
    ">=" (268) 21
    "<" (269) 22
    ">" (270) 23
    "!" (271) 14 49
    "||" (272) 15 50
    "&&" (273) 16 51
    ":=" (274) 24 25 26
    ";" (275) 24 25 26
    "," (276) 25 53 54
    "if" (277) 27 28
    "then" (278) 27 28
    "else" (279) 27
    "end" (280) 27 28 29 30 38 39 40 41
    "while" (281) 29 30
    "do" (282) 29 30
    "inv" (283) 34
    "[" (284) 2 26
    "]" (285) 2 26
    "program" (286) 38 39 40 41
    "pre" (287) 44
    "post" (288) 47
    "is" (289) 38 39 40 41
    "==>" (290) 52
    "forall" (291) 53
    "exists" (292) 54
    "identifier" <std::string> (293) 11 31 38 39 40 41 57 58
    "number" <int> (294) 12


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    aexp <imp::ast::ArithmeticExpression*> (41)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 2 4 5 6 7 8 9 10 18 19 20 21 22 23 24 25 26
    reference <imp::ast::Reference*> (42)
        on left: 11
        on right: 1 2
    constant <imp::ast::Constant*> (43)
        on left: 12
        on right: 3
    bexp <imp::ast::BooleanExpression*> (44)
        on left: 13 14 15 16 17
        on right: 14 15 16 17 27 28 29 30
    comp <imp::ast::Comparison*> (45)
        on left: 18 19 20 21 22 23
        on right: 13 48
    stmt <imp::ast::Statement*> (46)
        on left: 24 25 26 27 28 29 30
        on right: 36 37
    location <imp::ast::Location*> (47)
        on left: 31
        on right: 24 25 26
    inv_list <std::vector<imp::ast::Invariant*>> (48)
        on left: 32 33
        on right: 29 33
    inv <imp::ast::Invariant*> (49)
        on left: 34
        on right: 32 33
    block <imp::ast::Block*> (50)
        on left: 35
        on right: 27 28 29 30 38 39 40 41
    stmt_list <std::vector<imp::ast::Statement*>> (51)
        on left: 36 37
        on right: 35 37
    prog <imp::ast::Program*> (52)
        on left: 38 39 40 41
        on right: 0
    pre_list <std::vector<imp::ast::PreCondition*>> (53)
        on left: 42 43
        on right: 38 40 43
    pre <imp::ast::PreCondition*> (54)
        on left: 44
        on right: 42 43
    post_list <std::vector<imp::ast::PostCondition*>> (55)
        on left: 45 46
        on right: 38 39 46
    post <imp::ast::PostCondition*> (56)
        on left: 47
        on right: 45 46
    assertion <imp::ast::Assertion*> (57)
        on left: 48 49 50 51 52 53 54 55 56
        on right: 34 44 47 49 50 51 52 53 54 55
    identifier_list <std::vector<std::string>> (58)
        on left: 57 58
        on right: 53 54 58


State 0

    0 $accept: . prog "end of file"

    "program"  shift, and go to state 1

    prog  go to state 2


State 1

   38 prog: "program" . "identifier" pre_list post_list "is" block "end"
   39     | "program" . "identifier" post_list "is" block "end"
   40     | "program" . "identifier" pre_list "is" block "end"
   41     | "program" . "identifier" "is" block "end"

    "identifier"  shift, and go to state 3


State 2

    0 $accept: prog . "end of file"

    "end of file"  shift, and go to state 4


State 3

   38 prog: "program" "identifier" . pre_list post_list "is" block "end"
   39     | "program" "identifier" . post_list "is" block "end"
   40     | "program" "identifier" . pre_list "is" block "end"
   41     | "program" "identifier" . "is" block "end"

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 6
    "is"    shift, and go to state 7

    pre_list   go to state 8
    pre        go to state 9
    post_list  go to state 10
    post       go to state 11


State 4

    0 $accept: prog "end of file" .

    $default  accept


State 5

   44 pre: "pre" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 23


State 6

   47 post: "post" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 24


State 7

   41 prog: "program" "identifier" "is" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 30
    stmt_list  go to state 31


State 8

   38 prog: "program" "identifier" pre_list . post_list "is" block "end"
   40     | "program" "identifier" pre_list . "is" block "end"
   43 pre_list: pre_list . pre

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 6
    "is"    shift, and go to state 32

    pre        go to state 33
    post_list  go to state 34
    post       go to state 11


State 9

   42 pre_list: pre .

    $default  reduce using rule 42 (pre_list)


State 10

   39 prog: "program" "identifier" post_list . "is" block "end"
   46 post_list: post_list . post

    "post"  shift, and go to state 6
    "is"    shift, and go to state 35

    post  go to state 36


State 11

   45 post_list: post .

    $default  reduce using rule 45 (post_list)


State 12

    4 aexp: "-" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 38
    reference  go to state 20
    constant   go to state 21


State 13

   10 aexp: "(" . aexp ")"
   55 assertion: "(" . assertion ")"
   56          | "(" . error ")"

    error         shift, and go to state 39
    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 40
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 41


State 14

   49 assertion: "!" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 42


State 15

   53 assertion: "forall" . identifier_list "," assertion

    "identifier"  shift, and go to state 43

    identifier_list  go to state 44


State 16

   54 assertion: "exists" . identifier_list "," assertion

    "identifier"  shift, and go to state 43

    identifier_list  go to state 45


State 17

   11 reference: "identifier" .

    $default  reduce using rule 11 (reference)


State 18

   12 constant: "number" .

    $default  reduce using rule 12 (constant)


State 19

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 46
    "-"   shift, and go to state 47
    "*"   shift, and go to state 48
    "/"   shift, and go to state 49
    "%"   shift, and go to state 50
    "="   shift, and go to state 51
    "!="  shift, and go to state 52
    "<="  shift, and go to state 53
    ">="  shift, and go to state 54
    "<"   shift, and go to state 55
    ">"   shift, and go to state 56


State 20

    1 aexp: reference .
    2     | reference . "[" aexp "]"

    "["  shift, and go to state 57

    $default  reduce using rule 1 (aexp)


State 21

    3 aexp: constant .

    $default  reduce using rule 3 (aexp)


State 22

   48 assertion: comp .

    $default  reduce using rule 48 (assertion)


State 23

   44 pre: "pre" assertion .
   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    $default  reduce using rule 44 (pre)


State 24

   47 post: "post" assertion .
   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    $default  reduce using rule 47 (post)


State 25

   27 stmt: "if" . bexp "then" block "else" block "end"
   28     | "if" . bexp "then" block "end"

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 63
    comp       go to state 64


State 26

   29 stmt: "while" . bexp inv_list "do" block "end"
   30     | "while" . bexp "do" block "end"

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 65
    comp       go to state 64


State 27

   31 location: "identifier" .

    $default  reduce using rule 31 (location)


State 28

   36 stmt_list: stmt .

    $default  reduce using rule 36 (stmt_list)


State 29

   24 stmt: location . ":=" aexp ";"
   25     | location . "," location ":=" aexp "," aexp ";"
   26     | location . "[" aexp "]" ":=" aexp ";"

    ":="  shift, and go to state 66
    ","   shift, and go to state 67
    "["   shift, and go to state 68


State 30

   41 prog: "program" "identifier" "is" block . "end"

    "end"  shift, and go to state 69


State 31

   35 block: stmt_list .
   37 stmt_list: stmt_list . stmt

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    $default  reduce using rule 35 (block)

    stmt      go to state 70
    location  go to state 29


State 32

   40 prog: "program" "identifier" pre_list "is" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 71
    stmt_list  go to state 31


State 33

   43 pre_list: pre_list pre .

    $default  reduce using rule 43 (pre_list)


State 34

   38 prog: "program" "identifier" pre_list post_list . "is" block "end"
   46 post_list: post_list . post

    "post"  shift, and go to state 6
    "is"    shift, and go to state 72

    post  go to state 36


State 35

   39 prog: "program" "identifier" post_list "is" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 73
    stmt_list  go to state 31


State 36

   46 post_list: post_list post .

    $default  reduce using rule 46 (post_list)


State 37

   10 aexp: "(" . aexp ")"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 74
    reference  go to state 20
    constant   go to state 21


State 38

    4 aexp: "-" aexp .
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    "%"       [reduce using rule 4 (aexp)]
    $default  reduce using rule 4 (aexp)


State 39

   56 assertion: "(" error . ")"

    ")"  shift, and go to state 75


State 40

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 46
    "-"   shift, and go to state 47
    "*"   shift, and go to state 48
    "/"   shift, and go to state 49
    "%"   shift, and go to state 50
    ")"   shift, and go to state 76
    "="   shift, and go to state 51
    "!="  shift, and go to state 52
    "<="  shift, and go to state 53
    ">="  shift, and go to state 54
    "<"   shift, and go to state 55
    ">"   shift, and go to state 56


State 41

   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion
   55          | "(" assertion . ")"

    ")"    shift, and go to state 77
    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60


State 42

   49 assertion: "!" assertion .
   50          | assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    "==>"     [reduce using rule 49 (assertion)]
    $default  reduce using rule 49 (assertion)


State 43

   57 identifier_list: "identifier" .

    $default  reduce using rule 57 (identifier_list)


State 44

   53 assertion: "forall" identifier_list . "," assertion
   58 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 78
    "identifier"  shift, and go to state 79


State 45

   54 assertion: "exists" identifier_list . "," assertion
   58 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 80
    "identifier"  shift, and go to state 79


State 46

    5 aexp: aexp "+" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 81
    reference  go to state 20
    constant   go to state 21


State 47

    6 aexp: aexp "-" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 82
    reference  go to state 20
    constant   go to state 21


State 48

    7 aexp: aexp "*" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 83
    reference  go to state 20
    constant   go to state 21


State 49

    8 aexp: aexp "/" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 84
    reference  go to state 20
    constant   go to state 21


State 50

    9 aexp: aexp "%" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 85
    reference  go to state 20
    constant   go to state 21


State 51

   18 comp: aexp "=" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 86
    reference  go to state 20
    constant   go to state 21


State 52

   19 comp: aexp "!=" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 87
    reference  go to state 20
    constant   go to state 21


State 53

   20 comp: aexp "<=" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 88
    reference  go to state 20
    constant   go to state 21


State 54

   21 comp: aexp ">=" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 89
    reference  go to state 20
    constant   go to state 21


State 55

   22 comp: aexp "<" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 90
    reference  go to state 20
    constant   go to state 21


State 56

   23 comp: aexp ">" . aexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 91
    reference  go to state 20
    constant   go to state 21


State 57

    2 aexp: reference "[" . aexp "]"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 92
    reference  go to state 20
    constant   go to state 21


State 58

   50 assertion: assertion "||" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 93


State 59

   51 assertion: assertion "&&" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 94


State 60

   52 assertion: assertion "==>" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 95


State 61

   10 aexp: "(" . aexp ")"
   17 bexp: "(" . bexp ")"

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 40
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 96
    comp       go to state 64


State 62

   14 bexp: "!" . bexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 97
    comp       go to state 64


State 63

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   27 stmt: "if" bexp . "then" block "else" block "end"
   28     | "if" bexp . "then" block "end"

    "||"    shift, and go to state 98
    "&&"    shift, and go to state 99
    "then"  shift, and go to state 100


State 64

   13 bexp: comp .

    $default  reduce using rule 13 (bexp)


State 65

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   29 stmt: "while" bexp . inv_list "do" block "end"
   30     | "while" bexp . "do" block "end"

    "||"   shift, and go to state 98
    "&&"   shift, and go to state 99
    "do"   shift, and go to state 101
    "inv"  shift, and go to state 102

    inv_list  go to state 103
    inv       go to state 104


State 66

   24 stmt: location ":=" . aexp ";"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 105
    reference  go to state 20
    constant   go to state 21


State 67

   25 stmt: location "," . location ":=" aexp "," aexp ";"

    "identifier"  shift, and go to state 27

    location  go to state 106


State 68

   26 stmt: location "[" . aexp "]" ":=" aexp ";"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 107
    reference  go to state 20
    constant   go to state 21


State 69

   41 prog: "program" "identifier" "is" block "end" .

    $default  reduce using rule 41 (prog)


State 70

   37 stmt_list: stmt_list stmt .

    $default  reduce using rule 37 (stmt_list)


State 71

   40 prog: "program" "identifier" pre_list "is" block . "end"

    "end"  shift, and go to state 108


State 72

   38 prog: "program" "identifier" pre_list post_list "is" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 109
    stmt_list  go to state 31


State 73

   39 prog: "program" "identifier" post_list "is" block . "end"

    "end"  shift, and go to state 110


State 74

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    ")"  shift, and go to state 76


State 75

   56 assertion: "(" error ")" .

    $default  reduce using rule 56 (assertion)


State 76

   10 aexp: "(" aexp ")" .

    $default  reduce using rule 10 (aexp)


State 77

   55 assertion: "(" assertion ")" .

    $default  reduce using rule 55 (assertion)


State 78

   53 assertion: "forall" identifier_list "," . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 111


State 79

   58 identifier_list: identifier_list "identifier" .

    $default  reduce using rule 58 (identifier_list)


State 80

   54 assertion: "exists" identifier_list "," . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 112


State 81

    5 aexp: aexp . "+" aexp
    5     | aexp "+" aexp .
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    "%"       [reduce using rule 5 (aexp)]
    $default  reduce using rule 5 (aexp)


State 82

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    6     | aexp "-" aexp .
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    "%"       [reduce using rule 6 (aexp)]
    $default  reduce using rule 6 (aexp)


State 83

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    7     | aexp "*" aexp .
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "%"  shift, and go to state 50

    "%"       [reduce using rule 7 (aexp)]
    $default  reduce using rule 7 (aexp)


State 84

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    8     | aexp "/" aexp .
    9     | aexp . "%" aexp

    "%"  shift, and go to state 50

    "%"       [reduce using rule 8 (aexp)]
    $default  reduce using rule 8 (aexp)


State 85

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
    9     | aexp "%" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    "+"       [reduce using rule 9 (aexp)]
    "-"       [reduce using rule 9 (aexp)]
    "*"       [reduce using rule 9 (aexp)]
    "/"       [reduce using rule 9 (aexp)]
    "%"       [reduce using rule 9 (aexp)]
    $default  reduce using rule 9 (aexp)


State 86

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp "=" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 18 (comp)


State 87

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   19 comp: aexp "!=" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 19 (comp)


State 88

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   20 comp: aexp "<=" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 20 (comp)


State 89

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   21 comp: aexp ">=" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 21 (comp)


State 90

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   22 comp: aexp "<" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 22 (comp)


State 91

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   23 comp: aexp ">" aexp .

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50

    $default  reduce using rule 23 (comp)


State 92

    2 aexp: reference "[" aexp . "]"
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    "]"  shift, and go to state 113


State 93

   50 assertion: assertion . "||" assertion
   50          | assertion "||" assertion .
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "==>"  shift, and go to state 60

    "||"      [reduce using rule 50 (assertion)]
    "==>"     [reduce using rule 50 (assertion)]
    $default  reduce using rule 50 (assertion)


State 94

   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   51          | assertion "&&" assertion .
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    "&&"      [reduce using rule 51 (assertion)]
    "==>"     [reduce using rule 51 (assertion)]
    $default  reduce using rule 51 (assertion)


State 95

   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion
   52          | assertion "==>" assertion .

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    "||"      [reduce using rule 52 (assertion)]
    "&&"      [reduce using rule 52 (assertion)]
    "==>"     [reduce using rule 52 (assertion)]
    $default  reduce using rule 52 (assertion)


State 96

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   17     | "(" bexp . ")"

    ")"   shift, and go to state 114
    "||"  shift, and go to state 98
    "&&"  shift, and go to state 99


State 97

   14 bexp: "!" bexp .
   15     | bexp . "||" bexp
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 98
    "&&"  shift, and go to state 99

    $default  reduce using rule 14 (bexp)


State 98

   15 bexp: bexp "||" . bexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 115
    comp       go to state 64


State 99

   16 bexp: bexp "&&" . bexp

    "-"           shift, and go to state 12
    "("           shift, and go to state 61
    "!"           shift, and go to state 62
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    bexp       go to state 116
    comp       go to state 64


State 100

   27 stmt: "if" bexp "then" . block "else" block "end"
   28     | "if" bexp "then" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 117
    stmt_list  go to state 31


State 101

   30 stmt: "while" bexp "do" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 118
    stmt_list  go to state 31


State 102

   34 inv: "inv" . assertion

    "-"           shift, and go to state 12
    "("           shift, and go to state 13
    "!"           shift, and go to state 14
    "forall"      shift, and go to state 15
    "exists"      shift, and go to state 16
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 19
    reference  go to state 20
    constant   go to state 21
    comp       go to state 22
    assertion  go to state 119


State 103

   29 stmt: "while" bexp inv_list . "do" block "end"
   33 inv_list: inv_list . inv

    "do"   shift, and go to state 120
    "inv"  shift, and go to state 102

    inv  go to state 121


State 104

   32 inv_list: inv .

    $default  reduce using rule 32 (inv_list)


State 105

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   24 stmt: location ":=" aexp . ";"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    ";"  shift, and go to state 122


State 106

   25 stmt: location "," location . ":=" aexp "," aexp ";"

    ":="  shift, and go to state 123


State 107

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp . "]" ":=" aexp ";"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    "]"  shift, and go to state 124


State 108

   40 prog: "program" "identifier" pre_list "is" block "end" .

    $default  reduce using rule 40 (prog)


State 109

   38 prog: "program" "identifier" pre_list post_list "is" block . "end"

    "end"  shift, and go to state 125


State 110

   39 prog: "program" "identifier" post_list "is" block "end" .

    $default  reduce using rule 39 (prog)


State 111

   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion
   53          | "forall" identifier_list "," assertion .

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    "||"      [reduce using rule 53 (assertion)]
    "&&"      [reduce using rule 53 (assertion)]
    "==>"     [reduce using rule 53 (assertion)]
    $default  reduce using rule 53 (assertion)


State 112

   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion
   54          | "exists" identifier_list "," assertion .

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    "||"      [reduce using rule 54 (assertion)]
    "&&"      [reduce using rule 54 (assertion)]
    "==>"     [reduce using rule 54 (assertion)]
    $default  reduce using rule 54 (assertion)


State 113

    2 aexp: reference "[" aexp "]" .

    $default  reduce using rule 2 (aexp)


State 114

   17 bexp: "(" bexp ")" .

    $default  reduce using rule 17 (bexp)


State 115

   15 bexp: bexp . "||" bexp
   15     | bexp "||" bexp .
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 98

    "||"      [reduce using rule 15 (bexp)]
    $default  reduce using rule 15 (bexp)


State 116

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   16     | bexp "&&" bexp .

    "||"  shift, and go to state 98
    "&&"  shift, and go to state 99

    "&&"      [reduce using rule 16 (bexp)]
    $default  reduce using rule 16 (bexp)


State 117

   27 stmt: "if" bexp "then" block . "else" block "end"
   28     | "if" bexp "then" block . "end"

    "else"  shift, and go to state 126
    "end"   shift, and go to state 127


State 118

   30 stmt: "while" bexp "do" block . "end"

    "end"  shift, and go to state 128


State 119

   34 inv: "inv" assertion .
   50 assertion: assertion . "||" assertion
   51          | assertion . "&&" assertion
   52          | assertion . "==>" assertion

    "||"   shift, and go to state 58
    "&&"   shift, and go to state 59
    "==>"  shift, and go to state 60

    $default  reduce using rule 34 (inv)


State 120

   29 stmt: "while" bexp inv_list "do" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 129
    stmt_list  go to state 31


State 121

   33 inv_list: inv_list inv .

    $default  reduce using rule 33 (inv_list)


State 122

   24 stmt: location ":=" aexp ";" .

    $default  reduce using rule 24 (stmt)


State 123

   25 stmt: location "," location ":=" . aexp "," aexp ";"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 130
    reference  go to state 20
    constant   go to state 21


State 124

   26 stmt: location "[" aexp "]" . ":=" aexp ";"

    ":="  shift, and go to state 131


State 125

   38 prog: "program" "identifier" pre_list post_list "is" block "end" .

    $default  reduce using rule 38 (prog)


State 126

   27 stmt: "if" bexp "then" block "else" . block "end"

    "if"          shift, and go to state 25
    "while"       shift, and go to state 26
    "identifier"  shift, and go to state 27

    stmt       go to state 28
    location   go to state 29
    block      go to state 132
    stmt_list  go to state 31


State 127

   28 stmt: "if" bexp "then" block "end" .

    $default  reduce using rule 28 (stmt)


State 128

   30 stmt: "while" bexp "do" block "end" .

    $default  reduce using rule 30 (stmt)


State 129

   29 stmt: "while" bexp inv_list "do" block . "end"

    "end"  shift, and go to state 133


State 130

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp . "," aexp ";"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    ","  shift, and go to state 134


State 131

   26 stmt: location "[" aexp "]" ":=" . aexp ";"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 135
    reference  go to state 20
    constant   go to state 21


State 132

   27 stmt: "if" bexp "then" block "else" block . "end"

    "end"  shift, and go to state 136


State 133

   29 stmt: "while" bexp inv_list "do" block "end" .

    $default  reduce using rule 29 (stmt)


State 134

   25 stmt: location "," location ":=" aexp "," . aexp ";"

    "-"           shift, and go to state 12
    "("           shift, and go to state 37
    "identifier"  shift, and go to state 17
    "number"      shift, and go to state 18

    aexp       go to state 137
    reference  go to state 20
    constant   go to state 21


State 135

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp "]" ":=" aexp . ";"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    ";"  shift, and go to state 138


State 136

   27 stmt: "if" bexp "then" block "else" block "end" .

    $default  reduce using rule 27 (stmt)


State 137

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp "," aexp . ";"

    "+"  shift, and go to state 46
    "-"  shift, and go to state 47
    "*"  shift, and go to state 48
    "/"  shift, and go to state 49
    "%"  shift, and go to state 50
    ";"  shift, and go to state 139


State 138

   26 stmt: location "[" aexp "]" ":=" aexp ";" .

    $default  reduce using rule 26 (stmt)


State 139

   25 stmt: location "," location ":=" aexp "," aexp ";" .

    $default  reduce using rule 25 (stmt)
