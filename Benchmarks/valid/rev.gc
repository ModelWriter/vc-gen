assume 0 <= N;
assume i!0 = i; havoc i; assume i = 0;
assert i <= N; assert forall j, 0 <= j && j < i ==> read(a, j) = read(b, N - j);
havoc a; havoc i;
assume i <= N; assume forall j, 0 <= j && j < i ==> read(a, j) = read(b, N - j);
(assume i < N;
 assume a!0 = a; havoc a; assume a = write(a!0, i, read(b, N - i));
 assume i!1 = i; havoc i; assume i = i!1 + 1;
 assert i <= N; assert forall j, 0 <= j && j < i ==> read(a, j) = read(b, N - j); assume false;
 []
 assume !(i < N);)
assert forall i, 0 <= i && i < N ==> read(a, i) = read(b, N - i);