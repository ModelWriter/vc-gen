State 25 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 5 shift/reduce
State 70 conflicts: 2 shift/reduce
State 71 conflicts: 2 shift/reduce
State 72 conflicts: 3 shift/reduce
State 80 conflicts: 3 shift/reduce
State 81 conflicts: 3 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog "end of file"

    1 aexp: reference
    2     | reference "[" aexp "]"
    3     | constant
    4     | "-" aexp
    5     | aexp "+" aexp
    6     | aexp "-" aexp
    7     | aexp "*" aexp
    8     | aexp "/" aexp
    9     | aexp "%" aexp
   10     | "(" aexp ")"

   11 reference: "identifier"

   12 constant: "number"

   13 bexp: comp
   14     | "!" bexp
   15     | bexp "||" bexp
   16     | bexp "&&" bexp
   17     | "(" bexp ")"

   18 comp: aexp "=" aexp
   19     | aexp "!=" aexp
   20     | aexp "<=" aexp
   21     | aexp ">=" aexp
   22     | aexp "<" aexp
   23     | aexp ">" aexp

   24 stmt: location ":=" aexp ";"
   25     | location "," location ":=" aexp "," aexp ";"
   26     | location "[" aexp "]" ":=" aexp ";"
   27     | "if" bexp "then" block "else" block "end"
   28     | "if" bexp "then" block "end"
   29     | "while" bexp inv_list "do" block "end"

   30 location: "identifier"

   31 inv_list: inv
   32         | inv_list inv

   33 inv: "inv" assertion

   34 block: stmt_list

   35 stmt_list: stmt
   36          | stmt_list stmt

   37 prog: "program" "identifier" pre_list post_list "is" block "end"

   38 pre_list: pre
   39         | pre_list pre

   40 pre: "pre" assertion

   41 post_list: post
   42          | post_list post

   43 post: "post" assertion

   44 assertion: comp
   45          | "!" assertion
   46          | assertion "||" assertion
   47          | assertion "&&" assertion
   48          | assertion "==>" assertion
   49          | "forall" identifier_list "," assertion
   50          | "exists" identifier_list "," assertion
   51          | "(" assertion ")"
   52          | "(" error ")"

   53 identifier_list: "identifier"
   54                | identifier_list "identifier"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 52
    "+" (258) 5
    "-" (259) 4 6
    "*" (260) 7
    "/" (261) 8
    "%" (262) 9
    "(" (263) 10 17 51 52
    ")" (264) 10 17 51 52
    "=" (265) 18
    "!=" (266) 19
    "<=" (267) 20
    ">=" (268) 21
    "<" (269) 22
    ">" (270) 23
    "!" (271) 14 45
    "||" (272) 15 46
    "&&" (273) 16 47
    ":=" (274) 24 25 26
    ";" (275) 24 25 26
    "," (276) 25 49 50
    "if" (277) 27 28
    "then" (278) 27 28
    "else" (279) 27
    "end" (280) 27 28 29 37
    "while" (281) 29
    "do" (282) 29
    "inv" (283) 33
    "[" (284) 2 26
    "]" (285) 2 26
    "program" (286) 37
    "pre" (287) 40
    "post" (288) 43
    "is" (289) 37
    "==>" (290) 48
    "forall" (291) 49
    "exists" (292) 50
    "identifier" <std::string> (293) 11 30 37 53 54
    "number" <int> (294) 12


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    aexp <imp::ast::ArithmeticExpression*> (41)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 2 4 5 6 7 8 9 10 18 19 20 21 22 23 24 25 26
    reference <imp::ast::Reference*> (42)
        on left: 11
        on right: 1 2
    constant <imp::ast::Constant*> (43)
        on left: 12
        on right: 3
    bexp <imp::ast::BooleanExpression*> (44)
        on left: 13 14 15 16 17
        on right: 14 15 16 17 27 28 29
    comp <imp::ast::Comparison*> (45)
        on left: 18 19 20 21 22 23
        on right: 13 44
    stmt <imp::ast::Statement*> (46)
        on left: 24 25 26 27 28 29
        on right: 35 36
    location <imp::ast::Location*> (47)
        on left: 30
        on right: 24 25 26
    inv_list <std::vector<imp::ast::Invariant*>> (48)
        on left: 31 32
        on right: 29 32
    inv <imp::ast::Invariant*> (49)
        on left: 33
        on right: 31 32
    block <imp::ast::Block*> (50)
        on left: 34
        on right: 27 28 29 37
    stmt_list <std::vector<imp::ast::Statement*>> (51)
        on left: 35 36
        on right: 34 36
    prog <imp::ast::Program*> (52)
        on left: 37
        on right: 0
    pre_list <std::vector<imp::ast::PreCondition*>> (53)
        on left: 38 39
        on right: 37 39
    pre <imp::ast::PreCondition*> (54)
        on left: 40
        on right: 38 39
    post_list <std::vector<imp::ast::PostCondition*>> (55)
        on left: 41 42
        on right: 37 42
    post <imp::ast::PostCondition*> (56)
        on left: 43
        on right: 41 42
    assertion <imp::ast::Assertion*> (57)
        on left: 44 45 46 47 48 49 50 51 52
        on right: 33 40 43 45 46 47 48 49 50 51
    identifier_list <std::vector<std::string>> (58)
        on left: 53 54
        on right: 49 50 54


State 0

    0 $accept: . prog "end of file"

    "program"  shift, and go to state 1

    prog  go to state 2


State 1

   37 prog: "program" . "identifier" pre_list post_list "is" block "end"

    "identifier"  shift, and go to state 3


State 2

    0 $accept: prog . "end of file"

    "end of file"  shift, and go to state 4


State 3

   37 prog: "program" "identifier" . pre_list post_list "is" block "end"

    "pre"  shift, and go to state 5

    pre_list  go to state 6
    pre       go to state 7


State 4

    0 $accept: prog "end of file" .

    $default  accept


State 5

   40 pre: "pre" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 19


State 6

   37 prog: "program" "identifier" pre_list . post_list "is" block "end"
   39 pre_list: pre_list . pre

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 20

    pre        go to state 21
    post_list  go to state 22
    post       go to state 23


State 7

   38 pre_list: pre .

    $default  reduce using rule 38 (pre_list)


State 8

    4 aexp: "-" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 25
    reference  go to state 16
    constant   go to state 17


State 9

   10 aexp: "(" . aexp ")"
   51 assertion: "(" . assertion ")"
   52          | "(" . error ")"

    error         shift, and go to state 26
    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 27
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 28


State 10

   45 assertion: "!" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 29


State 11

   49 assertion: "forall" . identifier_list "," assertion

    "identifier"  shift, and go to state 30

    identifier_list  go to state 31


State 12

   50 assertion: "exists" . identifier_list "," assertion

    "identifier"  shift, and go to state 30

    identifier_list  go to state 32


State 13

   11 reference: "identifier" .

    $default  reduce using rule 11 (reference)


State 14

   12 constant: "number" .

    $default  reduce using rule 12 (constant)


State 15

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 33
    "-"   shift, and go to state 34
    "*"   shift, and go to state 35
    "/"   shift, and go to state 36
    "%"   shift, and go to state 37
    "="   shift, and go to state 38
    "!="  shift, and go to state 39
    "<="  shift, and go to state 40
    ">="  shift, and go to state 41
    "<"   shift, and go to state 42
    ">"   shift, and go to state 43


State 16

    1 aexp: reference .
    2     | reference . "[" aexp "]"

    "["  shift, and go to state 44

    $default  reduce using rule 1 (aexp)


State 17

    3 aexp: constant .

    $default  reduce using rule 3 (aexp)


State 18

   44 assertion: comp .

    $default  reduce using rule 44 (assertion)


State 19

   40 pre: "pre" assertion .
   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    $default  reduce using rule 40 (pre)


State 20

   43 post: "post" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 48


State 21

   39 pre_list: pre_list pre .

    $default  reduce using rule 39 (pre_list)


State 22

   37 prog: "program" "identifier" pre_list post_list . "is" block "end"
   42 post_list: post_list . post

    "post"  shift, and go to state 20
    "is"    shift, and go to state 49

    post  go to state 50


State 23

   41 post_list: post .

    $default  reduce using rule 41 (post_list)


State 24

   10 aexp: "(" . aexp ")"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 51
    reference  go to state 16
    constant   go to state 17


State 25

    4 aexp: "-" aexp .
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    "%"       [reduce using rule 4 (aexp)]
    $default  reduce using rule 4 (aexp)


State 26

   52 assertion: "(" error . ")"

    ")"  shift, and go to state 52


State 27

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 33
    "-"   shift, and go to state 34
    "*"   shift, and go to state 35
    "/"   shift, and go to state 36
    "%"   shift, and go to state 37
    ")"   shift, and go to state 53
    "="   shift, and go to state 38
    "!="  shift, and go to state 39
    "<="  shift, and go to state 40
    ">="  shift, and go to state 41
    "<"   shift, and go to state 42
    ">"   shift, and go to state 43


State 28

   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion
   51          | "(" assertion . ")"

    ")"    shift, and go to state 54
    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47


State 29

   45 assertion: "!" assertion .
   46          | assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    "==>"     [reduce using rule 45 (assertion)]
    $default  reduce using rule 45 (assertion)


State 30

   53 identifier_list: "identifier" .

    $default  reduce using rule 53 (identifier_list)


State 31

   49 assertion: "forall" identifier_list . "," assertion
   54 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 55
    "identifier"  shift, and go to state 56


State 32

   50 assertion: "exists" identifier_list . "," assertion
   54 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 57
    "identifier"  shift, and go to state 56


State 33

    5 aexp: aexp "+" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 58
    reference  go to state 16
    constant   go to state 17


State 34

    6 aexp: aexp "-" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 59
    reference  go to state 16
    constant   go to state 17


State 35

    7 aexp: aexp "*" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 60
    reference  go to state 16
    constant   go to state 17


State 36

    8 aexp: aexp "/" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 61
    reference  go to state 16
    constant   go to state 17


State 37

    9 aexp: aexp "%" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 62
    reference  go to state 16
    constant   go to state 17


State 38

   18 comp: aexp "=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 63
    reference  go to state 16
    constant   go to state 17


State 39

   19 comp: aexp "!=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 64
    reference  go to state 16
    constant   go to state 17


State 40

   20 comp: aexp "<=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 65
    reference  go to state 16
    constant   go to state 17


State 41

   21 comp: aexp ">=" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 66
    reference  go to state 16
    constant   go to state 17


State 42

   22 comp: aexp "<" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 67
    reference  go to state 16
    constant   go to state 17


State 43

   23 comp: aexp ">" . aexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 68
    reference  go to state 16
    constant   go to state 17


State 44

    2 aexp: reference "[" . aexp "]"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 69
    reference  go to state 16
    constant   go to state 17


State 45

   46 assertion: assertion "||" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 70


State 46

   47 assertion: assertion "&&" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 71


State 47

   48 assertion: assertion "==>" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 72


State 48

   43 post: "post" assertion .
   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    $default  reduce using rule 43 (post)


State 49

   37 prog: "program" "identifier" pre_list post_list "is" . block "end"

    "if"          shift, and go to state 73
    "while"       shift, and go to state 74
    "identifier"  shift, and go to state 75

    stmt       go to state 76
    location   go to state 77
    block      go to state 78
    stmt_list  go to state 79


State 50

   42 post_list: post_list post .

    $default  reduce using rule 42 (post_list)


State 51

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    ")"  shift, and go to state 53


State 52

   52 assertion: "(" error ")" .

    $default  reduce using rule 52 (assertion)


State 53

   10 aexp: "(" aexp ")" .

    $default  reduce using rule 10 (aexp)


State 54

   51 assertion: "(" assertion ")" .

    $default  reduce using rule 51 (assertion)


State 55

   49 assertion: "forall" identifier_list "," . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 80


State 56

   54 identifier_list: identifier_list "identifier" .

    $default  reduce using rule 54 (identifier_list)


State 57

   50 assertion: "exists" identifier_list "," . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 81


State 58

    5 aexp: aexp . "+" aexp
    5     | aexp "+" aexp .
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    "%"       [reduce using rule 5 (aexp)]
    $default  reduce using rule 5 (aexp)


State 59

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    6     | aexp "-" aexp .
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    "%"       [reduce using rule 6 (aexp)]
    $default  reduce using rule 6 (aexp)


State 60

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    7     | aexp "*" aexp .
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "%"  shift, and go to state 37

    "%"       [reduce using rule 7 (aexp)]
    $default  reduce using rule 7 (aexp)


State 61

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    8     | aexp "/" aexp .
    9     | aexp . "%" aexp

    "%"  shift, and go to state 37

    "%"       [reduce using rule 8 (aexp)]
    $default  reduce using rule 8 (aexp)


State 62

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
    9     | aexp "%" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    "+"       [reduce using rule 9 (aexp)]
    "-"       [reduce using rule 9 (aexp)]
    "*"       [reduce using rule 9 (aexp)]
    "/"       [reduce using rule 9 (aexp)]
    "%"       [reduce using rule 9 (aexp)]
    $default  reduce using rule 9 (aexp)


State 63

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp "=" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 18 (comp)


State 64

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   19 comp: aexp "!=" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 19 (comp)


State 65

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   20 comp: aexp "<=" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 20 (comp)


State 66

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   21 comp: aexp ">=" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 21 (comp)


State 67

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   22 comp: aexp "<" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 22 (comp)


State 68

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   23 comp: aexp ">" aexp .

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37

    $default  reduce using rule 23 (comp)


State 69

    2 aexp: reference "[" aexp . "]"
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    "]"  shift, and go to state 82


State 70

   46 assertion: assertion . "||" assertion
   46          | assertion "||" assertion .
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "==>"  shift, and go to state 47

    "||"      [reduce using rule 46 (assertion)]
    "==>"     [reduce using rule 46 (assertion)]
    $default  reduce using rule 46 (assertion)


State 71

   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   47          | assertion "&&" assertion .
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    "&&"      [reduce using rule 47 (assertion)]
    "==>"     [reduce using rule 47 (assertion)]
    $default  reduce using rule 47 (assertion)


State 72

   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion
   48          | assertion "==>" assertion .

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    "||"      [reduce using rule 48 (assertion)]
    "&&"      [reduce using rule 48 (assertion)]
    "==>"     [reduce using rule 48 (assertion)]
    $default  reduce using rule 48 (assertion)


State 73

   27 stmt: "if" . bexp "then" block "else" block "end"
   28     | "if" . bexp "then" block "end"

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 85
    comp       go to state 86


State 74

   29 stmt: "while" . bexp inv_list "do" block "end"

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 87
    comp       go to state 86


State 75

   30 location: "identifier" .

    $default  reduce using rule 30 (location)


State 76

   35 stmt_list: stmt .

    $default  reduce using rule 35 (stmt_list)


State 77

   24 stmt: location . ":=" aexp ";"
   25     | location . "," location ":=" aexp "," aexp ";"
   26     | location . "[" aexp "]" ":=" aexp ";"

    ":="  shift, and go to state 88
    ","   shift, and go to state 89
    "["   shift, and go to state 90


State 78

   37 prog: "program" "identifier" pre_list post_list "is" block . "end"

    "end"  shift, and go to state 91


State 79

   34 block: stmt_list .
   36 stmt_list: stmt_list . stmt

    "if"          shift, and go to state 73
    "while"       shift, and go to state 74
    "identifier"  shift, and go to state 75

    $default  reduce using rule 34 (block)

    stmt      go to state 92
    location  go to state 77


State 80

   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion
   49          | "forall" identifier_list "," assertion .

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    "||"      [reduce using rule 49 (assertion)]
    "&&"      [reduce using rule 49 (assertion)]
    "==>"     [reduce using rule 49 (assertion)]
    $default  reduce using rule 49 (assertion)


State 81

   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion
   50          | "exists" identifier_list "," assertion .

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    "||"      [reduce using rule 50 (assertion)]
    "&&"      [reduce using rule 50 (assertion)]
    "==>"     [reduce using rule 50 (assertion)]
    $default  reduce using rule 50 (assertion)


State 82

    2 aexp: reference "[" aexp "]" .

    $default  reduce using rule 2 (aexp)


State 83

   10 aexp: "(" . aexp ")"
   17 bexp: "(" . bexp ")"

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 27
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 93
    comp       go to state 86


State 84

   14 bexp: "!" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 94
    comp       go to state 86


State 85

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   27 stmt: "if" bexp . "then" block "else" block "end"
   28     | "if" bexp . "then" block "end"

    "||"    shift, and go to state 95
    "&&"    shift, and go to state 96
    "then"  shift, and go to state 97


State 86

   13 bexp: comp .

    $default  reduce using rule 13 (bexp)


State 87

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   29 stmt: "while" bexp . inv_list "do" block "end"

    "||"   shift, and go to state 95
    "&&"   shift, and go to state 96
    "inv"  shift, and go to state 98

    inv_list  go to state 99
    inv       go to state 100


State 88

   24 stmt: location ":=" . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 101
    reference  go to state 16
    constant   go to state 17


State 89

   25 stmt: location "," . location ":=" aexp "," aexp ";"

    "identifier"  shift, and go to state 75

    location  go to state 102


State 90

   26 stmt: location "[" . aexp "]" ":=" aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 103
    reference  go to state 16
    constant   go to state 17


State 91

   37 prog: "program" "identifier" pre_list post_list "is" block "end" .

    $default  reduce using rule 37 (prog)


State 92

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 93

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   17     | "(" bexp . ")"

    ")"   shift, and go to state 104
    "||"  shift, and go to state 95
    "&&"  shift, and go to state 96


State 94

   14 bexp: "!" bexp .
   15     | bexp . "||" bexp
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 95
    "&&"  shift, and go to state 96

    $default  reduce using rule 14 (bexp)


State 95

   15 bexp: bexp "||" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 105
    comp       go to state 86


State 96

   16 bexp: bexp "&&" . bexp

    "-"           shift, and go to state 8
    "("           shift, and go to state 83
    "!"           shift, and go to state 84
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    bexp       go to state 106
    comp       go to state 86


State 97

   27 stmt: "if" bexp "then" . block "else" block "end"
   28     | "if" bexp "then" . block "end"

    "if"          shift, and go to state 73
    "while"       shift, and go to state 74
    "identifier"  shift, and go to state 75

    stmt       go to state 76
    location   go to state 77
    block      go to state 107
    stmt_list  go to state 79


State 98

   33 inv: "inv" . assertion

    "-"           shift, and go to state 8
    "("           shift, and go to state 9
    "!"           shift, and go to state 10
    "forall"      shift, and go to state 11
    "exists"      shift, and go to state 12
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 15
    reference  go to state 16
    constant   go to state 17
    comp       go to state 18
    assertion  go to state 108


State 99

   29 stmt: "while" bexp inv_list . "do" block "end"
   32 inv_list: inv_list . inv

    "do"   shift, and go to state 109
    "inv"  shift, and go to state 98

    inv  go to state 110


State 100

   31 inv_list: inv .

    $default  reduce using rule 31 (inv_list)


State 101

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   24 stmt: location ":=" aexp . ";"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    ";"  shift, and go to state 111


State 102

   25 stmt: location "," location . ":=" aexp "," aexp ";"

    ":="  shift, and go to state 112


State 103

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp . "]" ":=" aexp ";"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    "]"  shift, and go to state 113


State 104

   17 bexp: "(" bexp ")" .

    $default  reduce using rule 17 (bexp)


State 105

   15 bexp: bexp . "||" bexp
   15     | bexp "||" bexp .
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 95

    "||"      [reduce using rule 15 (bexp)]
    $default  reduce using rule 15 (bexp)


State 106

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   16     | bexp "&&" bexp .

    "||"  shift, and go to state 95
    "&&"  shift, and go to state 96

    "&&"      [reduce using rule 16 (bexp)]
    $default  reduce using rule 16 (bexp)


State 107

   27 stmt: "if" bexp "then" block . "else" block "end"
   28     | "if" bexp "then" block . "end"

    "else"  shift, and go to state 114
    "end"   shift, and go to state 115


State 108

   33 inv: "inv" assertion .
   46 assertion: assertion . "||" assertion
   47          | assertion . "&&" assertion
   48          | assertion . "==>" assertion

    "||"   shift, and go to state 45
    "&&"   shift, and go to state 46
    "==>"  shift, and go to state 47

    $default  reduce using rule 33 (inv)


State 109

   29 stmt: "while" bexp inv_list "do" . block "end"

    "if"          shift, and go to state 73
    "while"       shift, and go to state 74
    "identifier"  shift, and go to state 75

    stmt       go to state 76
    location   go to state 77
    block      go to state 116
    stmt_list  go to state 79


State 110

   32 inv_list: inv_list inv .

    $default  reduce using rule 32 (inv_list)


State 111

   24 stmt: location ":=" aexp ";" .

    $default  reduce using rule 24 (stmt)


State 112

   25 stmt: location "," location ":=" . aexp "," aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 117
    reference  go to state 16
    constant   go to state 17


State 113

   26 stmt: location "[" aexp "]" . ":=" aexp ";"

    ":="  shift, and go to state 118


State 114

   27 stmt: "if" bexp "then" block "else" . block "end"

    "if"          shift, and go to state 73
    "while"       shift, and go to state 74
    "identifier"  shift, and go to state 75

    stmt       go to state 76
    location   go to state 77
    block      go to state 119
    stmt_list  go to state 79


State 115

   28 stmt: "if" bexp "then" block "end" .

    $default  reduce using rule 28 (stmt)


State 116

   29 stmt: "while" bexp inv_list "do" block . "end"

    "end"  shift, and go to state 120


State 117

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp . "," aexp ";"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    ","  shift, and go to state 121


State 118

   26 stmt: location "[" aexp "]" ":=" . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 122
    reference  go to state 16
    constant   go to state 17


State 119

   27 stmt: "if" bexp "then" block "else" block . "end"

    "end"  shift, and go to state 123


State 120

   29 stmt: "while" bexp inv_list "do" block "end" .

    $default  reduce using rule 29 (stmt)


State 121

   25 stmt: location "," location ":=" aexp "," . aexp ";"

    "-"           shift, and go to state 8
    "("           shift, and go to state 24
    "identifier"  shift, and go to state 13
    "number"      shift, and go to state 14

    aexp       go to state 124
    reference  go to state 16
    constant   go to state 17


State 122

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp "]" ":=" aexp . ";"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    ";"  shift, and go to state 125


State 123

   27 stmt: "if" bexp "then" block "else" block "end" .

    $default  reduce using rule 27 (stmt)


State 124

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp "," aexp . ";"

    "+"  shift, and go to state 33
    "-"  shift, and go to state 34
    "*"  shift, and go to state 35
    "/"  shift, and go to state 36
    "%"  shift, and go to state 37
    ";"  shift, and go to state 126


State 125

   26 stmt: location "[" aexp "]" ":=" aexp ";" .

    $default  reduce using rule 26 (stmt)


State 126

   25 stmt: location "," location ":=" aexp "," aexp ";" .

    $default  reduce using rule 25 (stmt)
