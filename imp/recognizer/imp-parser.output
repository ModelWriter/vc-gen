State 30 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 5 shift/reduce
State 81 conflicts: 2 shift/reduce
State 82 conflicts: 2 shift/reduce
State 83 conflicts: 3 shift/reduce
State 96 conflicts: 3 shift/reduce
State 97 conflicts: 3 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog "end of file"

    1 aexp: reference
    2     | reference "[" aexp "]"
    3     | constant
    4     | "-" aexp
    5     | aexp "+" aexp
    6     | aexp "-" aexp
    7     | aexp "*" aexp
    8     | aexp "/" aexp
    9     | aexp "%" aexp
   10     | "(" aexp ")"

   11 reference: "identifier"

   12 constant: "number"

   13 bexp: comp
   14     | "!" bexp
   15     | bexp "||" bexp
   16     | bexp "&&" bexp
   17     | "(" bexp ")"

   18 comp: aexp "=" aexp
   19     | aexp "!=" aexp
   20     | aexp "<=" aexp
   21     | aexp ">=" aexp
   22     | aexp "<" aexp
   23     | aexp ">" aexp

   24 stmt: location ":=" aexp ";"
   25     | location "," location ":=" aexp "," aexp ";"
   26     | location "[" aexp "]" ":=" aexp ";"
   27     | "if" bexp "then" block "else" block "end"
   28     | "if" bexp "then" block "end"
   29     | "while" bexp inv_list "do" block "end"

   30 location: "identifier"

   31 inv_list: inv
   32         | inv_list inv

   33 inv: "inv" assertion

   34 block: stmt_list

   35 stmt_list: stmt
   36          | stmt_list stmt

   37 prog: "program" "identifier" pre_list post_list "is" block "end"
   38     | "program" "identifier" post_list "is" block "end"
   39     | "program" "identifier" pre_list "is" block "end"

   40 pre_list: pre
   41         | pre_list pre

   42 pre: "pre" assertion

   43 post_list: post
   44          | post_list post

   45 post: "post" assertion

   46 assertion: comp
   47          | "!" assertion
   48          | assertion "||" assertion
   49          | assertion "&&" assertion
   50          | assertion "==>" assertion
   51          | "forall" identifier_list "," assertion
   52          | "exists" identifier_list "," assertion
   53          | "(" assertion ")"
   54          | "(" error ")"

   55 identifier_list: "identifier"
   56                | identifier_list "identifier"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 54
    "+" (258) 5
    "-" (259) 4 6
    "*" (260) 7
    "/" (261) 8
    "%" (262) 9
    "(" (263) 10 17 53 54
    ")" (264) 10 17 53 54
    "=" (265) 18
    "!=" (266) 19
    "<=" (267) 20
    ">=" (268) 21
    "<" (269) 22
    ">" (270) 23
    "!" (271) 14 47
    "||" (272) 15 48
    "&&" (273) 16 49
    ":=" (274) 24 25 26
    ";" (275) 24 25 26
    "," (276) 25 51 52
    "if" (277) 27 28
    "then" (278) 27 28
    "else" (279) 27
    "end" (280) 27 28 29 37 38 39
    "while" (281) 29
    "do" (282) 29
    "inv" (283) 33
    "[" (284) 2 26
    "]" (285) 2 26
    "program" (286) 37 38 39
    "pre" (287) 42
    "post" (288) 45
    "is" (289) 37 38 39
    "==>" (290) 50
    "forall" (291) 51
    "exists" (292) 52
    "identifier" <std::string> (293) 11 30 37 38 39 55 56
    "number" <int> (294) 12


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    aexp <imp::ast::ArithmeticExpression*> (41)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 2 4 5 6 7 8 9 10 18 19 20 21 22 23 24 25 26
    reference <imp::ast::Reference*> (42)
        on left: 11
        on right: 1 2
    constant <imp::ast::Constant*> (43)
        on left: 12
        on right: 3
    bexp <imp::ast::BooleanExpression*> (44)
        on left: 13 14 15 16 17
        on right: 14 15 16 17 27 28 29
    comp <imp::ast::Comparison*> (45)
        on left: 18 19 20 21 22 23
        on right: 13 46
    stmt <imp::ast::Statement*> (46)
        on left: 24 25 26 27 28 29
        on right: 35 36
    location <imp::ast::Location*> (47)
        on left: 30
        on right: 24 25 26
    inv_list <std::vector<imp::ast::Invariant*>> (48)
        on left: 31 32
        on right: 29 32
    inv <imp::ast::Invariant*> (49)
        on left: 33
        on right: 31 32
    block <imp::ast::Block*> (50)
        on left: 34
        on right: 27 28 29 37 38 39
    stmt_list <std::vector<imp::ast::Statement*>> (51)
        on left: 35 36
        on right: 34 36
    prog <imp::ast::Program*> (52)
        on left: 37 38 39
        on right: 0
    pre_list <std::vector<imp::ast::PreCondition*>> (53)
        on left: 40 41
        on right: 37 39 41
    pre <imp::ast::PreCondition*> (54)
        on left: 42
        on right: 40 41
    post_list <std::vector<imp::ast::PostCondition*>> (55)
        on left: 43 44
        on right: 37 38 44
    post <imp::ast::PostCondition*> (56)
        on left: 45
        on right: 43 44
    assertion <imp::ast::Assertion*> (57)
        on left: 46 47 48 49 50 51 52 53 54
        on right: 33 42 45 47 48 49 50 51 52 53
    identifier_list <std::vector<std::string>> (58)
        on left: 55 56
        on right: 51 52 56


State 0

    0 $accept: . prog "end of file"

    "program"  shift, and go to state 1

    prog  go to state 2


State 1

   37 prog: "program" . "identifier" pre_list post_list "is" block "end"
   38     | "program" . "identifier" post_list "is" block "end"
   39     | "program" . "identifier" pre_list "is" block "end"

    "identifier"  shift, and go to state 3


State 2

    0 $accept: prog . "end of file"

    "end of file"  shift, and go to state 4


State 3

   37 prog: "program" "identifier" . pre_list post_list "is" block "end"
   38     | "program" "identifier" . post_list "is" block "end"
   39     | "program" "identifier" . pre_list "is" block "end"

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 6

    pre_list   go to state 7
    pre        go to state 8
    post_list  go to state 9
    post       go to state 10


State 4

    0 $accept: prog "end of file" .

    $default  accept


State 5

   42 pre: "pre" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 22


State 6

   45 post: "post" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 23


State 7

   37 prog: "program" "identifier" pre_list . post_list "is" block "end"
   39     | "program" "identifier" pre_list . "is" block "end"
   41 pre_list: pre_list . pre

    "pre"   shift, and go to state 5
    "post"  shift, and go to state 6
    "is"    shift, and go to state 24

    pre        go to state 25
    post_list  go to state 26
    post       go to state 10


State 8

   40 pre_list: pre .

    $default  reduce using rule 40 (pre_list)


State 9

   38 prog: "program" "identifier" post_list . "is" block "end"
   44 post_list: post_list . post

    "post"  shift, and go to state 6
    "is"    shift, and go to state 27

    post  go to state 28


State 10

   43 post_list: post .

    $default  reduce using rule 43 (post_list)


State 11

    4 aexp: "-" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 30
    reference  go to state 19
    constant   go to state 20


State 12

   10 aexp: "(" . aexp ")"
   53 assertion: "(" . assertion ")"
   54          | "(" . error ")"

    error         shift, and go to state 31
    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 32
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 33


State 13

   47 assertion: "!" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 34


State 14

   51 assertion: "forall" . identifier_list "," assertion

    "identifier"  shift, and go to state 35

    identifier_list  go to state 36


State 15

   52 assertion: "exists" . identifier_list "," assertion

    "identifier"  shift, and go to state 35

    identifier_list  go to state 37


State 16

   11 reference: "identifier" .

    $default  reduce using rule 11 (reference)


State 17

   12 constant: "number" .

    $default  reduce using rule 12 (constant)


State 18

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 38
    "-"   shift, and go to state 39
    "*"   shift, and go to state 40
    "/"   shift, and go to state 41
    "%"   shift, and go to state 42
    "="   shift, and go to state 43
    "!="  shift, and go to state 44
    "<="  shift, and go to state 45
    ">="  shift, and go to state 46
    "<"   shift, and go to state 47
    ">"   shift, and go to state 48


State 19

    1 aexp: reference .
    2     | reference . "[" aexp "]"

    "["  shift, and go to state 49

    $default  reduce using rule 1 (aexp)


State 20

    3 aexp: constant .

    $default  reduce using rule 3 (aexp)


State 21

   46 assertion: comp .

    $default  reduce using rule 46 (assertion)


State 22

   42 pre: "pre" assertion .
   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    $default  reduce using rule 42 (pre)


State 23

   45 post: "post" assertion .
   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    $default  reduce using rule 45 (post)


State 24

   39 prog: "program" "identifier" pre_list "is" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 58
    stmt_list  go to state 59


State 25

   41 pre_list: pre_list pre .

    $default  reduce using rule 41 (pre_list)


State 26

   37 prog: "program" "identifier" pre_list post_list . "is" block "end"
   44 post_list: post_list . post

    "post"  shift, and go to state 6
    "is"    shift, and go to state 60

    post  go to state 28


State 27

   38 prog: "program" "identifier" post_list "is" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 61
    stmt_list  go to state 59


State 28

   44 post_list: post_list post .

    $default  reduce using rule 44 (post_list)


State 29

   10 aexp: "(" . aexp ")"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 62
    reference  go to state 19
    constant   go to state 20


State 30

    4 aexp: "-" aexp .
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    "%"       [reduce using rule 4 (aexp)]
    $default  reduce using rule 4 (aexp)


State 31

   54 assertion: "(" error . ")"

    ")"  shift, and go to state 63


State 32

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"
   18 comp: aexp . "=" aexp
   19     | aexp . "!=" aexp
   20     | aexp . "<=" aexp
   21     | aexp . ">=" aexp
   22     | aexp . "<" aexp
   23     | aexp . ">" aexp

    "+"   shift, and go to state 38
    "-"   shift, and go to state 39
    "*"   shift, and go to state 40
    "/"   shift, and go to state 41
    "%"   shift, and go to state 42
    ")"   shift, and go to state 64
    "="   shift, and go to state 43
    "!="  shift, and go to state 44
    "<="  shift, and go to state 45
    ">="  shift, and go to state 46
    "<"   shift, and go to state 47
    ">"   shift, and go to state 48


State 33

   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion
   53          | "(" assertion . ")"

    ")"    shift, and go to state 65
    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52


State 34

   47 assertion: "!" assertion .
   48          | assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    "==>"     [reduce using rule 47 (assertion)]
    $default  reduce using rule 47 (assertion)


State 35

   55 identifier_list: "identifier" .

    $default  reduce using rule 55 (identifier_list)


State 36

   51 assertion: "forall" identifier_list . "," assertion
   56 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 66
    "identifier"  shift, and go to state 67


State 37

   52 assertion: "exists" identifier_list . "," assertion
   56 identifier_list: identifier_list . "identifier"

    ","           shift, and go to state 68
    "identifier"  shift, and go to state 67


State 38

    5 aexp: aexp "+" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 69
    reference  go to state 19
    constant   go to state 20


State 39

    6 aexp: aexp "-" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 70
    reference  go to state 19
    constant   go to state 20


State 40

    7 aexp: aexp "*" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 71
    reference  go to state 19
    constant   go to state 20


State 41

    8 aexp: aexp "/" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 72
    reference  go to state 19
    constant   go to state 20


State 42

    9 aexp: aexp "%" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 73
    reference  go to state 19
    constant   go to state 20


State 43

   18 comp: aexp "=" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 74
    reference  go to state 19
    constant   go to state 20


State 44

   19 comp: aexp "!=" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 75
    reference  go to state 19
    constant   go to state 20


State 45

   20 comp: aexp "<=" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 76
    reference  go to state 19
    constant   go to state 20


State 46

   21 comp: aexp ">=" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 77
    reference  go to state 19
    constant   go to state 20


State 47

   22 comp: aexp "<" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 78
    reference  go to state 19
    constant   go to state 20


State 48

   23 comp: aexp ">" . aexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 79
    reference  go to state 19
    constant   go to state 20


State 49

    2 aexp: reference "[" . aexp "]"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 80
    reference  go to state 19
    constant   go to state 20


State 50

   48 assertion: assertion "||" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 81


State 51

   49 assertion: assertion "&&" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 82


State 52

   50 assertion: assertion "==>" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 83


State 53

   27 stmt: "if" . bexp "then" block "else" block "end"
   28     | "if" . bexp "then" block "end"

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 86
    comp       go to state 87


State 54

   29 stmt: "while" . bexp inv_list "do" block "end"

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 88
    comp       go to state 87


State 55

   30 location: "identifier" .

    $default  reduce using rule 30 (location)


State 56

   35 stmt_list: stmt .

    $default  reduce using rule 35 (stmt_list)


State 57

   24 stmt: location . ":=" aexp ";"
   25     | location . "," location ":=" aexp "," aexp ";"
   26     | location . "[" aexp "]" ":=" aexp ";"

    ":="  shift, and go to state 89
    ","   shift, and go to state 90
    "["   shift, and go to state 91


State 58

   39 prog: "program" "identifier" pre_list "is" block . "end"

    "end"  shift, and go to state 92


State 59

   34 block: stmt_list .
   36 stmt_list: stmt_list . stmt

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    $default  reduce using rule 34 (block)

    stmt      go to state 93
    location  go to state 57


State 60

   37 prog: "program" "identifier" pre_list post_list "is" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 94
    stmt_list  go to state 59


State 61

   38 prog: "program" "identifier" post_list "is" block . "end"

    "end"  shift, and go to state 95


State 62

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   10     | "(" aexp . ")"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    ")"  shift, and go to state 64


State 63

   54 assertion: "(" error ")" .

    $default  reduce using rule 54 (assertion)


State 64

   10 aexp: "(" aexp ")" .

    $default  reduce using rule 10 (aexp)


State 65

   53 assertion: "(" assertion ")" .

    $default  reduce using rule 53 (assertion)


State 66

   51 assertion: "forall" identifier_list "," . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 96


State 67

   56 identifier_list: identifier_list "identifier" .

    $default  reduce using rule 56 (identifier_list)


State 68

   52 assertion: "exists" identifier_list "," . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 97


State 69

    5 aexp: aexp . "+" aexp
    5     | aexp "+" aexp .
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    "%"       [reduce using rule 5 (aexp)]
    $default  reduce using rule 5 (aexp)


State 70

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    6     | aexp "-" aexp .
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    "%"       [reduce using rule 6 (aexp)]
    $default  reduce using rule 6 (aexp)


State 71

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    7     | aexp "*" aexp .
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "%"  shift, and go to state 42

    "%"       [reduce using rule 7 (aexp)]
    $default  reduce using rule 7 (aexp)


State 72

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    8     | aexp "/" aexp .
    9     | aexp . "%" aexp

    "%"  shift, and go to state 42

    "%"       [reduce using rule 8 (aexp)]
    $default  reduce using rule 8 (aexp)


State 73

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
    9     | aexp "%" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    "+"       [reduce using rule 9 (aexp)]
    "-"       [reduce using rule 9 (aexp)]
    "*"       [reduce using rule 9 (aexp)]
    "/"       [reduce using rule 9 (aexp)]
    "%"       [reduce using rule 9 (aexp)]
    $default  reduce using rule 9 (aexp)


State 74

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   18 comp: aexp "=" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 18 (comp)


State 75

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   19 comp: aexp "!=" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 19 (comp)


State 76

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   20 comp: aexp "<=" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 20 (comp)


State 77

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   21 comp: aexp ">=" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 21 (comp)


State 78

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   22 comp: aexp "<" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 22 (comp)


State 79

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   23 comp: aexp ">" aexp .

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42

    $default  reduce using rule 23 (comp)


State 80

    2 aexp: reference "[" aexp . "]"
    5     | aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    "]"  shift, and go to state 98


State 81

   48 assertion: assertion . "||" assertion
   48          | assertion "||" assertion .
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "==>"  shift, and go to state 52

    "||"      [reduce using rule 48 (assertion)]
    "==>"     [reduce using rule 48 (assertion)]
    $default  reduce using rule 48 (assertion)


State 82

   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   49          | assertion "&&" assertion .
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    "&&"      [reduce using rule 49 (assertion)]
    "==>"     [reduce using rule 49 (assertion)]
    $default  reduce using rule 49 (assertion)


State 83

   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion
   50          | assertion "==>" assertion .

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    "||"      [reduce using rule 50 (assertion)]
    "&&"      [reduce using rule 50 (assertion)]
    "==>"     [reduce using rule 50 (assertion)]
    $default  reduce using rule 50 (assertion)


State 84

   10 aexp: "(" . aexp ")"
   17 bexp: "(" . bexp ")"

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 32
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 99
    comp       go to state 87


State 85

   14 bexp: "!" . bexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 100
    comp       go to state 87


State 86

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   27 stmt: "if" bexp . "then" block "else" block "end"
   28     | "if" bexp . "then" block "end"

    "||"    shift, and go to state 101
    "&&"    shift, and go to state 102
    "then"  shift, and go to state 103


State 87

   13 bexp: comp .

    $default  reduce using rule 13 (bexp)


State 88

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   29 stmt: "while" bexp . inv_list "do" block "end"

    "||"   shift, and go to state 101
    "&&"   shift, and go to state 102
    "inv"  shift, and go to state 104

    inv_list  go to state 105
    inv       go to state 106


State 89

   24 stmt: location ":=" . aexp ";"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 107
    reference  go to state 19
    constant   go to state 20


State 90

   25 stmt: location "," . location ":=" aexp "," aexp ";"

    "identifier"  shift, and go to state 55

    location  go to state 108


State 91

   26 stmt: location "[" . aexp "]" ":=" aexp ";"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 109
    reference  go to state 19
    constant   go to state 20


State 92

   39 prog: "program" "identifier" pre_list "is" block "end" .

    $default  reduce using rule 39 (prog)


State 93

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 94

   37 prog: "program" "identifier" pre_list post_list "is" block . "end"

    "end"  shift, and go to state 110


State 95

   38 prog: "program" "identifier" post_list "is" block "end" .

    $default  reduce using rule 38 (prog)


State 96

   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion
   51          | "forall" identifier_list "," assertion .

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    "||"      [reduce using rule 51 (assertion)]
    "&&"      [reduce using rule 51 (assertion)]
    "==>"     [reduce using rule 51 (assertion)]
    $default  reduce using rule 51 (assertion)


State 97

   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion
   52          | "exists" identifier_list "," assertion .

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    "||"      [reduce using rule 52 (assertion)]
    "&&"      [reduce using rule 52 (assertion)]
    "==>"     [reduce using rule 52 (assertion)]
    $default  reduce using rule 52 (assertion)


State 98

    2 aexp: reference "[" aexp "]" .

    $default  reduce using rule 2 (aexp)


State 99

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   17     | "(" bexp . ")"

    ")"   shift, and go to state 111
    "||"  shift, and go to state 101
    "&&"  shift, and go to state 102


State 100

   14 bexp: "!" bexp .
   15     | bexp . "||" bexp
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 101
    "&&"  shift, and go to state 102

    $default  reduce using rule 14 (bexp)


State 101

   15 bexp: bexp "||" . bexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 112
    comp       go to state 87


State 102

   16 bexp: bexp "&&" . bexp

    "-"           shift, and go to state 11
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    bexp       go to state 113
    comp       go to state 87


State 103

   27 stmt: "if" bexp "then" . block "else" block "end"
   28     | "if" bexp "then" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 114
    stmt_list  go to state 59


State 104

   33 inv: "inv" . assertion

    "-"           shift, and go to state 11
    "("           shift, and go to state 12
    "!"           shift, and go to state 13
    "forall"      shift, and go to state 14
    "exists"      shift, and go to state 15
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 18
    reference  go to state 19
    constant   go to state 20
    comp       go to state 21
    assertion  go to state 115


State 105

   29 stmt: "while" bexp inv_list . "do" block "end"
   32 inv_list: inv_list . inv

    "do"   shift, and go to state 116
    "inv"  shift, and go to state 104

    inv  go to state 117


State 106

   31 inv_list: inv .

    $default  reduce using rule 31 (inv_list)


State 107

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   24 stmt: location ":=" aexp . ";"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    ";"  shift, and go to state 118


State 108

   25 stmt: location "," location . ":=" aexp "," aexp ";"

    ":="  shift, and go to state 119


State 109

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp . "]" ":=" aexp ";"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    "]"  shift, and go to state 120


State 110

   37 prog: "program" "identifier" pre_list post_list "is" block "end" .

    $default  reduce using rule 37 (prog)


State 111

   17 bexp: "(" bexp ")" .

    $default  reduce using rule 17 (bexp)


State 112

   15 bexp: bexp . "||" bexp
   15     | bexp "||" bexp .
   16     | bexp . "&&" bexp

    "||"  shift, and go to state 101

    "||"      [reduce using rule 15 (bexp)]
    $default  reduce using rule 15 (bexp)


State 113

   15 bexp: bexp . "||" bexp
   16     | bexp . "&&" bexp
   16     | bexp "&&" bexp .

    "||"  shift, and go to state 101
    "&&"  shift, and go to state 102

    "&&"      [reduce using rule 16 (bexp)]
    $default  reduce using rule 16 (bexp)


State 114

   27 stmt: "if" bexp "then" block . "else" block "end"
   28     | "if" bexp "then" block . "end"

    "else"  shift, and go to state 121
    "end"   shift, and go to state 122


State 115

   33 inv: "inv" assertion .
   48 assertion: assertion . "||" assertion
   49          | assertion . "&&" assertion
   50          | assertion . "==>" assertion

    "||"   shift, and go to state 50
    "&&"   shift, and go to state 51
    "==>"  shift, and go to state 52

    $default  reduce using rule 33 (inv)


State 116

   29 stmt: "while" bexp inv_list "do" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 123
    stmt_list  go to state 59


State 117

   32 inv_list: inv_list inv .

    $default  reduce using rule 32 (inv_list)


State 118

   24 stmt: location ":=" aexp ";" .

    $default  reduce using rule 24 (stmt)


State 119

   25 stmt: location "," location ":=" . aexp "," aexp ";"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 124
    reference  go to state 19
    constant   go to state 20


State 120

   26 stmt: location "[" aexp "]" . ":=" aexp ";"

    ":="  shift, and go to state 125


State 121

   27 stmt: "if" bexp "then" block "else" . block "end"

    "if"          shift, and go to state 53
    "while"       shift, and go to state 54
    "identifier"  shift, and go to state 55

    stmt       go to state 56
    location   go to state 57
    block      go to state 126
    stmt_list  go to state 59


State 122

   28 stmt: "if" bexp "then" block "end" .

    $default  reduce using rule 28 (stmt)


State 123

   29 stmt: "while" bexp inv_list "do" block . "end"

    "end"  shift, and go to state 127


State 124

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp . "," aexp ";"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    ","  shift, and go to state 128


State 125

   26 stmt: location "[" aexp "]" ":=" . aexp ";"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 129
    reference  go to state 19
    constant   go to state 20


State 126

   27 stmt: "if" bexp "then" block "else" block . "end"

    "end"  shift, and go to state 130


State 127

   29 stmt: "while" bexp inv_list "do" block "end" .

    $default  reduce using rule 29 (stmt)


State 128

   25 stmt: location "," location ":=" aexp "," . aexp ";"

    "-"           shift, and go to state 11
    "("           shift, and go to state 29
    "identifier"  shift, and go to state 16
    "number"      shift, and go to state 17

    aexp       go to state 131
    reference  go to state 19
    constant   go to state 20


State 129

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   26 stmt: location "[" aexp "]" ":=" aexp . ";"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    ";"  shift, and go to state 132


State 130

   27 stmt: "if" bexp "then" block "else" block "end" .

    $default  reduce using rule 27 (stmt)


State 131

    5 aexp: aexp . "+" aexp
    6     | aexp . "-" aexp
    7     | aexp . "*" aexp
    8     | aexp . "/" aexp
    9     | aexp . "%" aexp
   25 stmt: location "," location ":=" aexp "," aexp . ";"

    "+"  shift, and go to state 38
    "-"  shift, and go to state 39
    "*"  shift, and go to state 40
    "/"  shift, and go to state 41
    "%"  shift, and go to state 42
    ";"  shift, and go to state 133


State 132

   26 stmt: location "[" aexp "]" ":=" aexp ";" .

    $default  reduce using rule 26 (stmt)


State 133

   25 stmt: location "," location ":=" aexp "," aexp ";" .

    $default  reduce using rule 25 (stmt)
