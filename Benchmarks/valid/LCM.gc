assume 0 <= A && 0 <= B; assume A != 0 || B != 0;
assume gcd!0 = gcd; havoc gcd; assume gcd = 1;
assume j!0 = j; havoc j; assume j = 1;
assert A % gcd = 0 && B % gcd = 0;
havoc gcd; havoc j;
assume A % gcd = 0 && B % gcd = 0;
(assume j <= A || j <= B;
 (assume A % j = 0 && B % j = 0;
  assume gcd!1 = gcd; havoc gcd; assume gcd = j;
  []
  assume !(A % j = 0 && B % j = 0); assume true;)
 assert A % gcd = 0 && B % gcd = 0; assume false;
 []
 assume !(j <= A || j <= B);)
assume lcm!0 = lcm; havoc lcm; assume lcm = (A * B) / gcd;
assert A <= lcm && lcm <= A * B && B <= lcm;